}
min <- c(-6, -5, 0, 0.5, 0.1, 0.5, 0.5, 0.5, 0.5, -20, -20, -80, 0, 2, 0.78)
max <- c(2, 3.9, 300, 4, 3, 3, 3, 4, 3, 30, 14, 80, 100, 5, 0.98)
varDom <- cbind(min,max)
popSize <- 90
pgtol <- 1e-1
factr <- 4.5036e14
maxit <- 5
balance <- FALSE
library(rgenoud)
library(parallel)
cl <- makePSOCKcluster(rep("localhost",8))
clusterExport(cl,"f")
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, cluster=cl, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
cat("min:",min)
stopCluster(cl)
f <- function(x){
cat("x:",x)
y <- rep(0,15)
y[1] <- x[1] * x[1] + 1
y[2] <- x[2] * x[2] + 1
y[3] <- x[3] * x[3] + 1
y[4] <- x[4] * x[4] + 1
y[5] <- x[5] * x[5] + 1
y[6] <- x[6] * x[6] + 1
y[7] <- x[7] * x[7] + 1
y[8] <- x[8] * x[8] + 1
y[9] <- x[9] * x[9] + 1
y[10] <- x[10] * x[10] + 1
y[11] <- x[11] * x[11] + 1
y[12] <- x[12] * x[12] + 1
y[13] <- x[13] * x[13] + 1
y[14] <- x[14] * x[14] + 1
y[15] <- x[15] * x[15] + 1
obj <- dist(rbind(y,rep(0,15)))
return(as.numeric(obj))
}
min <- c(-6, -5, 0, 0.5, 0.1, 0.5, 0.5, 0.5, 0.5, -20, -20, -80, 0, 2, 0.78)
max <- c(2, 3.9, 300, 4, 3, 3, 3, 4, 3, 30, 14, 80, 100, 5, 0.98)
varDom <- cbind(min,max)
popSize <- 90
pgtol <- 1e-1
factr <- 4.5036e14
maxit <- 5
balance <- FALSE
library(rgenoud)
library(parallel)
cl <- makePSOCKcluster(rep("localhost",8))
clusterExport(cl,"f")
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, cluster=cl, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
stopCluster(cl)
f <- function(x){
cat("x:",x,"\n")
y <- rep(0,15)
y[1] <- x[1] * x[1] + 1
y[2] <- x[2] * x[2] + 1
y[3] <- x[3] * x[3] + 1
y[4] <- x[4] * x[4] + 1
y[5] <- x[5] * x[5] + 1
y[6] <- x[6] * x[6] + 1
y[7] <- x[7] * x[7] + 1
y[8] <- x[8] * x[8] + 1
y[9] <- x[9] * x[9] + 1
y[10] <- x[10] * x[10] + 1
y[11] <- x[11] * x[11] + 1
y[12] <- x[12] * x[12] + 1
y[13] <- x[13] * x[13] + 1
y[14] <- x[14] * x[14] + 1
y[15] <- x[15] * x[15] + 1
obj <- dist(rbind(y,rep(0,15)))
return(as.numeric(obj))
}
min <- c(-6, -5, 0, 0.5, 0.1, 0.5, 0.5, 0.5, 0.5, -20, -20, -80, 0, 2, 0.78)
max <- c(2, 3.9, 300, 4, 3, 3, 3, 4, 3, 30, 14, 80, 100, 5, 0.98)
varDom <- cbind(min,max)
popSize <- 90
pgtol <- 1e-1
factr <- 4.5036e14
maxit <- 5
balance <- FALSE
library(rgenoud)
library(parallel)
cl <- makePSOCKcluster(rep("localhost",8))
clusterExport(cl,"f")
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, cluster=cl, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
stopCluster(cl)
f <- function(x){
cat("x:",x,"\n")
y <- rep(0,15)
y[1] <- x[1] * x[1] + 1
y[2] <- x[2] * x[2] + 1
y[3] <- x[3] * x[3] + 1
y[4] <- x[4] * x[4] + 1
y[5] <- x[5] * x[5] + 1
y[6] <- x[6] * x[6] + 1
y[7] <- x[7] * x[7] + 1
y[8] <- x[8] * x[8] + 1
y[9] <- x[9] * x[9] + 1
y[10] <- x[10] * x[10] + 1
y[11] <- x[11] * x[11] + 1
y[12] <- x[12] * x[12] + 1
y[13] <- x[13] * x[13] + 1
y[14] <- x[14] * x[14] + 1
y[15] <- x[15] * x[15] + 1
obj <- dist(rbind(y,rep(0,15)))
return(as.numeric(obj))
}
min <- c(-6, -5, 0, 0.5, 0.1, 0.5, 0.5, 0.5, 0.5, -20, -20, -80, 0, 2, 0.78)
max <- c(2, 3.9, 300, 4, 3, 3, 3, 4, 3, 30, 14, 80, 100, 5, 0.98)
varDom <- cbind(min,max)
popSize <- 90
pgtol <- 1e-1
factr <- 4.5036e14
maxit <- 5
balance <- FALSE
library(rgenoud)
library(parallel)
cl <- makePSOCKcluster(rep("localhost",90))
clusterExport(cl,"f")
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, cluster=cl, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
stopCluster(cl)
f <- function(x){
write(x, file="x", append=TRUE)
y <- rep(0,15)
y[1] <- x[1] * x[1] + 1
y[2] <- x[2] * x[2] + 1
y[3] <- x[3] * x[3] + 1
y[4] <- x[4] * x[4] + 1
y[5] <- x[5] * x[5] + 1
y[6] <- x[6] * x[6] + 1
y[7] <- x[7] * x[7] + 1
y[8] <- x[8] * x[8] + 1
y[9] <- x[9] * x[9] + 1
y[10] <- x[10] * x[10] + 1
y[11] <- x[11] * x[11] + 1
y[12] <- x[12] * x[12] + 1
y[13] <- x[13] * x[13] + 1
y[14] <- x[14] * x[14] + 1
y[15] <- x[15] * x[15] + 1
obj <- dist(rbind(y,rep(0,15)))
return(as.numeric(obj))
}
min <- c(-6, -5, 0, 0.5, 0.1, 0.5, 0.5, 0.5, 0.5, -20, -20, -80, 0, 2, 0.78)
max <- c(2, 3.9, 300, 4, 3, 3, 3, 4, 3, 30, 14, 80, 100, 5, 0.98)
varDom <- cbind(min,max)
popSize <- 90
pgtol <- 1e-1
factr <- 4.5036e14
maxit <- 5
balance <- FALSE
library(rgenoud)
library(parallel)
cl <- makePSOCKcluster(rep("localhost",90))
clusterExport(cl,"f")
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, cluster=cl, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
stopCluster(cl)
f <- function(x){
write(x, file="x", append=TRUE)
cat("x:", x, "\n")
y <- rep(0,15)
y[1] <- x[1] * x[1] + 1
y[2] <- x[2] * x[2] + 1
y[3] <- x[3] * x[3] + 1
y[4] <- x[4] * x[4] + 1
y[5] <- x[5] * x[5] + 1
y[6] <- x[6] * x[6] + 1
y[7] <- x[7] * x[7] + 1
y[8] <- x[8] * x[8] + 1
y[9] <- x[9] * x[9] + 1
y[10] <- x[10] * x[10] + 1
y[11] <- x[11] * x[11] + 1
y[12] <- x[12] * x[12] + 1
y[13] <- x[13] * x[13] + 1
y[14] <- x[14] * x[14] + 1
y[15] <- x[15] * x[15] + 1
obj <- dist(rbind(y,rep(0,15)))
return(as.numeric(obj))
}
min <- c(-6, -5, 0, 0.5, 0.1, 0.5, 0.5, 0.5, 0.5, -20, -20, -80, 0, 2, 0.78)
max <- c(2, 3.9, 300, 4, 3, 3, 3, 4, 3, 30, 14, 80, 100, 5, 0.98)
varDom <- cbind(min,max)
popSize <- 90
pgtol <- 1e-1
factr <- 4.5036e14
maxit <- 5
balance <- FALSE
library(rgenoud)
library(parallel)
cl <- makePSOCKcluster(rep("localhost",90))
clusterExport(cl,"f")
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, cluster=cl, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
stopCluster(cl)
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
stopCluster(cl)
f <- function(x){
cat("x:", x, "\n", file="x.txt", append=TRUE)
cat("x:", x, "\n")
y <- rep(0,15)
y[1] <- x[1] * x[1] + 1
y[2] <- x[2] * x[2] + 1
y[3] <- x[3] * x[3] + 1
y[4] <- x[4] * x[4] + 1
y[5] <- x[5] * x[5] + 1
y[6] <- x[6] * x[6] + 1
y[7] <- x[7] * x[7] + 1
y[8] <- x[8] * x[8] + 1
y[9] <- x[9] * x[9] + 1
y[10] <- x[10] * x[10] + 1
y[11] <- x[11] * x[11] + 1
y[12] <- x[12] * x[12] + 1
y[13] <- x[13] * x[13] + 1
y[14] <- x[14] * x[14] + 1
y[15] <- x[15] * x[15] + 1
obj <- dist(rbind(y,rep(0,15)))
return(as.numeric(obj))
}
min <- c(-6, -5, 0, 0.5, 0.1, 0.5, 0.5, 0.5, 0.5, -20, -20, -80, 0, 2, 0.78)
max <- c(2, 3.9, 300, 4, 3, 3, 3, 4, 3, 30, 14, 80, 100, 5, 0.98)
varDom <- cbind(min,max)
popSize <- 90
pgtol <- 1e-1
factr <- 4.5036e14
maxit <- 5
balance <- FALSE
library(rgenoud)
library(parallel)
cl <- makePSOCKcluster(rep("localhost",90))
clusterExport(cl,"f")
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, cluster=cl, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
stopCluster(cl)
f <- function(x){
cat("x:", x, "\n", file="x.txt", append=TRUE)
cat("x:", x, "\n")
y <- rep(0,15)
y[1] <- x[1] * x[1] + 1
y[2] <- x[2] * x[2] + 1
y[3] <- x[3] * x[3] + 1
y[4] <- x[4] * x[4] + 1
y[5] <- x[5] * x[5] + 1
y[6] <- x[6] * x[6] + 1
y[7] <- x[7] * x[7] + 1
y[8] <- x[8] * x[8] + 1
y[9] <- x[9] * x[9] + 1
y[10] <- x[10] * x[10] + 1
y[11] <- x[11] * x[11] + 1
y[12] <- x[12] * x[12] + 1
y[13] <- x[13] * x[13] + 1
y[14] <- x[14] * x[14] + 1
y[15] <- x[15] * x[15] + 1
obj <- dist(rbind(y,rep(0,15)))
return(as.numeric(obj))
}
min <- c(-6, -5, 0, 0.5, 0.1, 0.5, 0.5, 0.5, 0.5, -20, -20, -80, 0, 2, 0.78)
max <- c(2, 3.9, 300, 4, 3, 3, 3, 4, 3, 30, 14, 80, 100, 5, 0.98)
varDom <- cbind(min,max)
popSize <- 90
pgtol <- 1e-1
factr <- 4.5036e14
maxit <- 5
balance <- TRUE
library(rgenoud)
library(parallel)
cl <- makePSOCKcluster(rep("localhost",90))
clusterExport(cl,"f")
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, cluster=cl, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
f <- function(x){
cat("x:", x, "\n", file="x.txt", append=TRUE)
cat("x:", x, "\n")
y <- rep(0,15)
y[1] <- x[1] * x[1] + 1
y[2] <- x[2] * x[2] + 1
y[3] <- x[3] * x[3] + 1
y[4] <- x[4] * x[4] + 1
y[5] <- x[5] * x[5] + 1
y[6] <- x[6] * x[6] + 1
y[7] <- x[7] * x[7] + 1
y[8] <- x[8] * x[8] + 1
y[9] <- x[9] * x[9] + 1
y[10] <- x[10] * x[10] + 1
y[11] <- x[11] * x[11] + 1
y[12] <- x[12] * x[12] + 1
y[13] <- x[13] * x[13] + 1
y[14] <- x[14] * x[14] + 1
y[15] <- x[15] * x[15] + 1
obj <- dist(rbind(y,rep(0,15)))
return(as.numeric(obj))
}
min <- c(-6, -5, 0, 0.5, 0.1, 0.5, 0.5, 0.5, 0.5, -20, -20, -80, 0, 2, 0.78)
max <- c(2, 3.9, 300, 4, 3, 3, 3, 4, 3, 30, 14, 80, 100, 5, 0.98)
varDom <- cbind(min,max)
popSize <- 90
pgtol <- 1e-1
factr <- 4.5036e14
maxit <- 5
balance <- FALSE
library(rgenoud)
library(parallel)
cl <- makePSOCKcluster(rep("localhost",90))
clusterExport(cl,"f")
results <- genoud(fn=f, nvars=length(min), pop.size=popSize, BFGSburnin=6, max.generations=7, Domains=varDom, boundary.enforcement=2, print.level=3, cluster=cl, BFGS=1, solution.tolerance=0.01, wait.generations=1, control=list(trace=6, factr=factr, maxit=maxit, pgtol=pgtol), debug=TRUE, P1=50, P2=50, P3=50, P4=50, P5=50, P6=50, P7=50, P8=50, P9=0, MemoryMatrix=1, balance=balance)
stopCluster(cl)
335/2
143/2
167.5-71.5
142/2
167.5-71
3000-1600
0.5 + log(2)
log(2)
format long
log(2)
library(snow)
cl = makeSOCKcluster(10)
bigsleep <- function(sleeptime,mat) Sys.sleep(sleeptime)
bigmatrix <- matrix(0,2000,2000)
sleeptime <- rep(1,100)
tm <- snow.time(clusterApplyLB(cl, sleeptime, bigsleep, bigmatrix))
tm
plot(tm)
tm2 <- snow.time(parLapplyLB(cl, sleeptime, bigsleep, bigmatrix))
tm2 <- snow.time(parLapply(cl, sleeptime, bigsleep, bigmatrix))
plot(tm2)
tm2
parLapplyLB <- function(cl = NULL, X, fun, ...)
{
cl <- defaultCluster(cl)
do.call(c,
clusterApplyLB(cl, x = splitList(X, length(cl)),
fun = lapply, fun, ...),
quote = TRUE)
}
tm3 <- snow.time(parLapplyLB(cl, sleeptime, bigsleep, bigmatrix))
edit parLapplyLB
edit(parLapplyLB)
tm3 <- snow.time(parLapplyLB(cl, sleeptime, bigsleep, bigmatrix))
parLapplyLB <- function(cl = NULL, X, fun, ...)
{
do.call(c,
clusterApplyLB(cl, x = splitList(X, length(cl)),
fun = lapply, fun, ...),
quote = TRUE)
}
tm3 <- snow.time(parLapplyLB(cl, sleeptime, bigsleep, bigmatrix))
plot(tm3)
tm3
tm2
View(bigmatrix)
sleeptime2 = seq(from=1,to=100,by=1)
tm3 <- snow.time(parLapplyLB(cl, sleeptime2, bigsleep, bigmatrix))
sleeptime2 = seq(length.out=100,from=1,to=3)
tm3 <- snow.time(parLapplyLB(cl, sleeptime2, bigsleep, bigmatrix))
plot(tm3)
tm2 <- snow.time(parLapply(cl, sleeptime2, bigsleep, bigmatrix))
plot(tm2)
tm2
tm3
data.matrix(c(1,2,3),c(4,5,6),c(7,8,9))
data.matrix(c(1,2,3),c(4,5,6)
)
[c(1,2,3),c(4,5,6),c(7,8,9)]
matrix[c(1,2,3),c(4,5,6),c(7,8,9)]
array[c(1,2,3),c(4,5,6),c(7,8,9)]
data.frame(c(1,2,3),c(4,5,6)
)
data.matrix(data.frame(c(1,2,3),c(4,5,6)))
data.matrix(data.frame(c(1,2,3),c(4,5,6),c(7,8,9)))
mat = data.matrix(data.frame(c(1,2,3),c(4,5,6),c(7,8,9)))
mat[,1]
mat[,2]
mat = data.matrix(data.frame(c(1,2,3,4),c(5,6,7,8),c(9,10,11,12)))
mat
mat[,1]
mat[1,]
t(mat)
as.data.frame(t(mat))
as.list(as.data.frame(t(mat)))
is.list(mat)
is.data.frame(mat)
is.data.matrix(mat)
is.matrix(mat)
is.vector(mat)
is.array(mat)
mat_list <- as.list(as.data.frame(t(mat)))
mat_list
mat
as.data.matrix(mat)
as.matrix(mat)
data.frame(mat_list)
t(data.frame(mat_list))
matrix(t(data.frame(mat_list)))
matrix(t(data.frame(mat_list)),ncol=3)
install.packages("sensitivity")
install.packages("C:/Projects/openstudio-server-develop/lib/R-packages/NRELmoo_1.2.23.tar.gz", repos = NULL, type = "source")
install.packages("C:/Projects/openstudio-server-develop/lib/R-packages/NRELpso_0.3.13.tar.gz", repos = NULL, type = "source")
install.packages("lhs")
install.packages("sensitivity")
install.packages("C:/Projects/openstudio-server-develop/lib/R-packages/NRELpso_0.3.13.tar.gz", repos = NULL, type = "source")
install.packages("C:/Projects/openstudio-server-develop/lib/R-packages/rgenoud_5.7-9.tar.gz", repos = NULL, type = "source")
install.packages("rgenoud")
install.packages("e1071")
install.packages("triangle")
library(lhs)
library(sensitivity)
library(triangle)
p <- randomLHS(10,2)
p
qnorm(p[1],0,10)
qnorm(p[,1],0,10)
p[,1]
p[,1]''
p[,1]'
t(p[,1])
qnorm(p[,1],5,2)
qnorm(p[,1],5,4)
qnorm(p[,1],5,3)
qnorm(p[,1],5,2)
qnorm(p[,1],5,2.5)
qnorm(p[,1],5,2.4)
a <- qnorm(p[,1],5,2.4)
plot(a)
runif(10,0,10)
b <- qnorm(p[,2],5,2.4)
a
b
morris(model=NULL,factors=2,r=1,design="oat",binf=c(0,0), bsup=c(10,10),scale = FALSE)
morris(model=NULL,factors=2,r=1,design=list(type="oat",levels=2,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m <- morris(model=NULL,factors=2,r=1,design=list(type="oat",levels=2,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m
print(m)
m$call
m$X
m$y
m$ee
m$X
m2 <- morris(model=NULL,factors=2,r=1,design=list(type="oat",levels=3,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m2$X
m3 <- morris(model=NULL,factors=2,r=1,design=list(type="oat",levels=4,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m3$X
m4 <- morris(model=NULL,factors=2,r=2,design=list(type="oat",levels=3,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m4$X
m4 <- morris(model=NULL,factors=2,r=2,design=list(type="oat",levels=3,grid.jump=1),scale = FALSE)
m4$X
m4 <- morris(model=NULL,factors=2,r=3,design=list(type="oat",levels=3,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m4$X
m4 <- morris(model=NULL,factors=3,r=3,design=list(type="oat",levels=3,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m4$X
m4 <- morris(model=NULL,factors=3,r=3,design=list(type="oat",levels=3,grid.jump=1),binf=c(0,0,5), bsup=c(10,10,10),scale = FALSE)
m4$X
tell(m4$X,m4$X[,1])
tell(m4,m4$X[,1])
m4
m <- morris(model=NULL,factors=2,r=1,design=list(type="oat",levels=1,grid.jump=1),binf=c(0,0,5), bsup=c(10,10,10),scale = FALSE)
m
m$X
m <- morris(model=NULL,factors=2,r=1,design=list(type="oat",levels=1,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m$X
m <- morris(model=NULL,factors=2,r=1,design=list(type="oat",levels=2,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m$X
m <- morris(model=NULL,factors=2,r=2,design=list(type="oat",levels=2,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m$X
m <- morris(model=NULL,factors=2,r=2,design=list(type="oat",levels=3,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m$X
m <- morris(model=NULL,factors=2,r=2,design=list(type="oat",levels=2,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m$X
m <- morris(model=NULL,factors=2,r=2,design=list(type="oat",levels=3,grid.jump=2),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m$X
m <- morris(model=NULL,factors=2,r=2,design=list(type="oat",levels=2,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m$X
m <- morris(model=NULL,factors=2,r=1,design=list(type="oat",levels=2,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
m$X
m$X[,1] + m$X[,2]
tell(m,m$X[,1] + m$X[,2])
m
m$y
tell(m,m$X[,1] + m$X[,2] + 1)
m$y
m
m <- morris(model=NULL,factors=2,r=1,design=list(type="oat",levels=2,grid.jump=1),binf=c(0,0), bsup=c(10,10),scale = FALSE)
morris.fun(m$X)
x <- morris(model = NULL, factors = 20, r = 4,
design = list(type = "oat", levels = 5, grid.jump = 3))
morris.fun(x$X)
y <- morris.fun(x$X)
tell(x,y)
x
m <- morris(model = morris.fun, factors = 20, r = 4,
design = list(type = "oat", levels = 5, grid.jump = 3))
m
plot(m)
plot(x)
plot(m)
plot(x)
m1 <- morris(model = ishigami.fun, factors = 20, r = 4,
design = list(type = "oat", levels = 5, grid.jump = 3))
x1 <- morris(model = NULL, factors = 20, r = 4,
design = list(type = "oat", levels = 5, grid.jump = 3))
y1 <- ishigami.fun(x1$X)
tell(x1,y1)
x1
m1
x
tell.morris(x,y)
4^16
2^16
str()
list(c(1,2,3),c(4,5,6))
as.data.frame(list(c(1,2,3),c(4,5,6)))
a <- as.data.frame(list(c(1,2,3),c(4,5,6)))
a[1]
a[2]
setwd("C:/Projects/OpenStudio-PTool/DC_analysis/4_5")
source('C:/Projects/OpenStudio-PTool/DC_analysis/4_5/R_script.R', encoding = 'UTF-8')
